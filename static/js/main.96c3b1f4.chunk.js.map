{"version":3,"sources":["components/Todo.js","components/TodoList.js","App.js","index.js"],"names":["Todo","theTodo","settheTodo","To","name","description","complete","useState","toggleDescription","settoggleDescription","Container","className","onClick","Row","Col","xs","lg","e","stopPropagation","map","element","id","type","defaultChecked","md","filter","fontSize","length","TodoList","App","todoDescription","useRef","todoName","toggleAlert","settoggleAlert","ref","placeholder","todoN","current","value","todoD","prevTodo","uuidv4","Alert","variant","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.96c3b1f4.chunk.js","sourcesContent":["import React, {useState} from \"react\"\r\nimport {Row, Col, Container} from \"react-bootstrap\"\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport './Todo.css'\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\n\r\n\r\nexport default function Todo({theTodo, settheTodo, To, name, description, complete}) {\r\n    const [toggleDescription, settoggleDescription] = useState(false)\r\n    const deleteTodo = () =>{\r\n        settheTodo(theTodo.filter((element) => element.id !== To.id))\r\n    }\r\n    const toggleTodo =(e) =>{\r\n        e.stopPropagation()\r\n        settheTodo(theTodo.map((element) =>{\r\n            if(element.id === To.id){\r\n                return {\r\n                    ...element, complete: !element.complete\r\n                }\r\n            }\r\n            return element;\r\n        }))\r\n    }\r\n\r\n    const togDescription = () =>{\r\n        settoggleDescription(!toggleDescription)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Container>\r\n            <div className=\"box\" onClick={togDescription}>\r\n                 <Row>\r\n                <Col className=\"Leftside\" xs lg=\"1\">\r\n                      <input className=\"checkBox\" onClick={toggleTodo} type=\"checkbox\" defaultChecked={complete} />\r\n                   </Col>            \r\n               <Col className=\"Mid\" md=\"auto\">\r\n                       {name}\r\n                 </Col>\r\n                <Col className=\"Rightside\">\r\n                    <button className=\"Iconbtn\" onClick={deleteTodo}><DeleteIcon className=\"Icon\" fontSize=\"large\"/></button>\r\n               </Col>\r\n                       {\r\n                         toggleDescription === true && description.length > 0 &&\r\n                         <div>\r\n                            <h4>Description</h4>\r\n                            <div className=\"descriptionLay\">\r\n                            {description}\r\n                            </div>\r\n                         </div>\r\n                     }\r\n               </Row>\r\n </div>\r\n                \r\n                     </Container>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\n","import React from 'react'\r\nimport Todo from './Todo'\r\nimport './TodoList.css'\r\n\r\nexport default function TodoList({theTodo, settheTodo}) {\r\n    \r\n    return (\r\n        <div>\r\n            {  theTodo.filter(Todo => Todo.name).length > 0 &&\r\n <h5 className=\"showTodoR\">{theTodo.filter(Todo => !Todo.complete).length} uncompleted tasks</h5>\r\n}\r\n            {\r\n               theTodo.map((To) => (\r\n                    <Todo theTodo={theTodo} settheTodo={settheTodo} To={To} key={To.id} name={To.name} description={To.description} complete={To.complete}/>\r\n               ))\r\n           }\r\n           \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n// <input type=\"checkbox\" checked={To.complete} onChange={handleTodo}/>","\nimport './App.css';\n\nimport React, {useState, useRef} from 'react';\nimport {v4 as uuidv4} from 'uuid'\n\nimport TodoList from './components/TodoList';\nimport { Container } from 'react-bootstrap';\n\nimport { Alert } from 'react-bootstrap';\n\nfunction App() {\n    const todoDescription = useRef(null);\n    const todoName = useRef(null);\n    const [theTodo, settheTodo] = useState([]);    \n    const [toggleAlert, settoggleAlert] = useState(false);\n\nconst addToList = () =>{\n  const todoN = todoName.current.value\n        if(todoN.length > 0){\n    const todoD = todoDescription.current.value\n    \n           settheTodo(prevTodo =>{\n               return [...prevTodo, {id: uuidv4(), name: todoN, description: todoD, complete: false}]\n           })\n           todoDescription.current.value = null\n           todoName.current.value = null\n           settoggleAlert(false)\n          }\n          else{\n            settoggleAlert(true)\n          }\n       }\n\n       const ClearTask = () =>{\n         settheTodo([])\n       }\n\n  return (\n    <div className=\"App\">\n      <Container>\n      <h1 className=\"Title\">To Do List </h1>\n            <input className=\"inputBox\" ref={todoName} type=\"text\" placeholder=\"Add a task\"/>\n            <br></br>\n            <textarea className=\"descBox\" ref={todoDescription} type=\"text\" placeholder=\"Add a description if needed\"> </textarea>\n            <br></br>\n            <button className=\"addList\" onClick={addToList}>Add</button>\n            <button className=\"clearList\" onClick={ClearTask}>Clear All Task </button>\n\n            {toggleAlert === true &&\n      <Alert variant=\"danger\" >\n      Please insert field in Add a task\n      </Alert>\n        }\n           <TodoList theTodo={theTodo} settheTodo={settheTodo} />\n        \n           </Container>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}